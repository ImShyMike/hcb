# Use the official Ruby image as the base
FROM ruby:3.3.6

# Install necessary system dependencies
RUN apt-get update -qq && \
    apt-get install -y \
    build-essential \
    libpq-dev \
    curl \
    gnupg2 \
    libgirepository1.0-dev \
    libcairo2-dev \
    libpoppler-glib-dev \
    && rm -rf /var/lib/apt/lists/*

# Add Node.js and Yarn repositories
RUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add - && \
    echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list

# Install remaining dependencies
RUN apt-get update -qq && \
    apt-get install -y \
    nodejs \
    yarn \
    libvips \
    imagemagick \
    wkhtmltopdf \
    tesseract-ocr \
    && rm -rf /var/lib/apt/lists/*

# Set environment variables
ENV RAILS_ENV=production \
    RACK_ENV=production \
    RAILS_SERVE_STATIC_FILES=true \
    RAILS_LOG_TO_STDOUT=true \
    NODE_ENV=production \
    RAILS_GROUPS=assets

# Set the working directory
WORKDIR /app

# Create a non-root user
RUN groupadd -r app && useradd -r -g app app && \
    chown -R app:app /app

# Copy Ruby version file first
COPY --chown=app:app .ruby-version ./

# Copy Gemfile and Gemfile.lock
COPY --chown=app:app Gemfile Gemfile.lock ./

# Switch to non-root user
USER app

# Install Ruby gems
RUN gem install bundler:2.3.26 && \
    bundle config set --local without 'development test' && \
    bundle install --jobs 4

# Copy the entire application
COPY --chown=app:app . .

# Install JavaScript dependencies and precompile assets
RUN yarn install && \
    SECRET_KEY_BASE=dummy bundle exec rake assets:precompile

# Expose port 3000 to the Docker host
EXPOSE 3000

# Start the Rails server
CMD ["bundle", "exec", "rails", "server", "-b", "0.0.0.0"]
