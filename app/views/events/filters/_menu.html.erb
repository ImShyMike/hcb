<div
  data-controller="menu"
  class="inline-flex items-center"
  data-menu-append-to-value="turbo-frame#ledger"
  data-menu-placement-value="bottom-start">

  <button
    type="button"
    class="pop my-2 cursor-pointer tooltipped tooltipped--s"
    aria-label="Add filters..."
    data-menu-target="toggle"
    data-action="menu#toggle click@document->menu#close keydown@document->menu#keydown">
    <%= inline_icon "filter", size: 28 %>
  </button>

  <div
    class="menu__content menu__content--2 menu__content--compact h5"
    style="width: 290px; padding: 0.5rem"
    data-menu-target="content">

    <div data-controller="tabs" data-tabs-default-tab-value="<%= filters[0][:label] %>">

      <% filters.each do |filter| %>
        <button
          id="<%= filter[:label] %>"
          data-tabs-target="btn"
          data-action="tabs#select">
          <%= filter[:label].humanize %>
        </button>
      <% end %>

      <div class="menu__divider"></div>

      <% filters.each do |filter| %>
        <div data-tabs-target="tab" id="<%= filter[:label] %>">
          <% case filter[:type] %>
          <% when "select" %>
            <% if filter[:options].empty? %>
              <p class="p-1 text-center">No <%= filter[:label].pluralize %> found</p>
            <% end %>
            <% filter[:options].each do |option| %>
              <% label, value = option.is_a?(Array) ? option : [option.humanize, option] %>
              <%= link_to label,
                          upsert_query_params(filter[:key] => value),
                          class: "menu__action !border-none #{'menu__action--active' if params[filter[:key]] == value.to_s}" %>
            <% end %>

          <% when "date_range" %>
            <%= form_with(model: false, local: true, method: :get, class: "flex-auto p1") do |form| %>
              <% ["after", "before"].each do |suffix| %>
                <label class="bold"><%= suffix.humanize %>...</label>
                <%= form.date_field "#{filter[:key_base]}_#{suffix}", class: "border mb1", value: params["#{filter[:key_base]}_#{suffix}"] %>
              <% end %>

              <% request.query_parameters.except("#{filter[:key_base]}_before", "#{filter[:key_base]}_after").each do |k, v| %>
                <%= hidden_field_tag k, v %>
              <% end %>

              <%= form.submit "Filter..." %>
            <% end %>

          <% when "amount_range" %>
            <%= form_with(model: false, local: true, method: :get, class: "flex-auto p1") do |form| %>
              <div
                data-controller="dual-slider"
                class="range-wrap"
                data-dual-slider-min-value="0"
                data-dual-slider-max-value="1000"
                data-dual-slider-default-min-value="<%= params["#{filter[:key_base]}_less_than"] || 0 %>"
                data-dual-slider-default-max-value="<%= params["#{filter[:key_base]}_greater_than"] || 1000 %>"
              >
                
                <div class="flex items-center -mt-10 mb-10">
                    <div class="flex gap-2 w-full">
                    <% ["less_than", "greater_than"].each do |suffix| %>
                      <%= form.number_field "#{filter[:key_base]}_#{suffix}",
                        data: { "dual-slider-target": (suffix == 'less_than' ? "min" : "max") + "Input"},
                        class: "bg-transparent !border-none w-full #{suffix == 'less_than' ? "minInput" : "maxInput"}"
                      %>
                    <% end %>
                    </div>
                </div>

                <div class="track" data-dual-slider-target="track"></div>

                <div class="readout">
                  <input type="range" data-dual-slider-target="min" />
                  <input type="range" data-dual-slider-target="max" />
                </div>
              </div>

              <% request.query_parameters.except("#{filter[:key_base]}_less_than", "#{filter[:key_base]}_greater_than").each do |k, v| %>
                <%= hidden_field_tag k, v %>
              <% end %>

              <%= form.submit "Filter..." %>
            <% end %>
          <% end %>
        </div>
      <% end %>
    </div>
  </div>
</div>

<%= yield %>
